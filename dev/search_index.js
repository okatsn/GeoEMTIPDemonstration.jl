var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = GeoEMTIPDemonstration","category":"page"},{"location":"#GeoEMTIPDemonstration","page":"Home","title":"GeoEMTIPDemonstration","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for GeoEMTIPDemonstration.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [GeoEMTIPDemonstration]","category":"page"},{"location":"#GeoEMTIPDemonstration.DateInterval-Tuple{Any}","page":"Home","title":"GeoEMTIPDemonstration.DateInterval","text":"Iterable DateInterval(edges); returns (t0, t1) from edges where (t0, t1) = edges[i], edges[i + 1] for i in 1:length(edges)-1.\n\nExample\n\njulia> using Dates\n\njulia> edges = [Date(0000, 1, 1), Date(2017, 10, 1), Date(2020, 10, 1), Date(9999,12,31)];\n\njulia> [(t0, t1) for (t0, t1) in DateInterval(edges)]\n3-element Vector{Tuple{Date, Date}}:\n (Date(\"0000-01-01\"), Date(\"2017-10-01\"))\n (Date(\"2017-10-01\"), Date(\"2020-10-01\"))\n (Date(\"2020-10-01\"), Date(\"9999-12-31\"))\n\n\n\n\n\n","category":"method"},{"location":"#GeoEMTIPDemonstration.InformationForFigure","page":"Home","title":"GeoEMTIPDemonstration.InformationForFigure","text":"\n\n\n\n","category":"type"},{"location":"#GeoEMTIPDemonstration.dtstr2nday-Tuple{Any}","page":"Home","title":"GeoEMTIPDemonstration.dtstr2nday","text":"Given dtstr in format \"yyyymmdd-yyyymmdd\", dtstr2nday(dtstr) returns the number of days covering this range. Saying the two dates are DateTime, dt0 and dt1, it should be noted that dtstr2nday returns (dt1 - dt0).value + 1 rather than (dt1 - dt0).value.\n\ndtstr = \"20150402-20150928\"\ndtstr2nday(dtstr)\n\n\n\n\n\n","category":"method"},{"location":"#GeoEMTIPDemonstration.prep202304!-Tuple{Any}","page":"Home","title":"GeoEMTIPDemonstration.prep202304!","text":"Given df = CSV.read(\"summary_test.csv\", DataFrame), prep202304!(df) calculates the following new columns:\n\n:FittingDegree\n:prp_ind (for Makie plot use)\n:frc_ind (for Makie plot use)\n\n\n\n\n\n","category":"method"},{"location":"#GeoEMTIPDemonstration.set_aog_pallete!-Tuple{ColormapRef}","page":"Home","title":"GeoEMTIPDemonstration.set_aog_pallete!","text":"You may alternatively do:\n\ncolors = [\"#FC7808\", \"#8C00EC\", \"#107A78\"]\nstyle = (color= colors, )\ndf = (x=rand([\"a\", \"b\", \"c\"], 100), y=rand(100))\nplt = data(df) * mapping(:x, :y, color = :x) * visual(BoxPlot)\ndraw(plt, palettes = style)\n\nSee the thread Styling AlgebraOfGraphics boxplots.\n\n\n\n\n\n","category":"method"},{"location":"#GeoEMTIPDemonstration.textoffset-Tuple{Tuple{Symbol, Symbol}, Any}","page":"Home","title":"GeoEMTIPDemonstration.textoffset","text":"Example: Text offset according to align\n\nstation_location = DataFrame(\n    Lon = [112.1, 112.3, 112.5],\n    Lat = [21.1, 23.3, 25.5],\n    code = [\"YL\", \"AA\", \"KUOL\"],\n    TextAlign = [\n        (:center, :top),\n        (:right, :bottom),\n        (:left, :bottom),\n    ]\n)\ntext(station_location.Lon, station_location.Lat;\n    text=station_location.code,\n    align=station_location.TextAlign,\n    offset = textoffset.(station_location.TextAlign, 4),\n    fontsize=15\n    )\n\n\n\n\n\n","category":"method"},{"location":"#GeoEMTIPDemonstration.to_days-Tuple{Dates.CompoundPeriod}","page":"Home","title":"GeoEMTIPDemonstration.to_days","text":"to_days(p::Dates.CompoundPeriod) returns the summation of CompoundPeriod.\n\n\n\n\n\n","category":"method"},{"location":"#GeoEMTIPDemonstration.to_days-Tuple{Dates.Week}","page":"Home","title":"GeoEMTIPDemonstration.to_days","text":"Given p::Period, to_days(p) returns Real number of the value in the unit of day.\n\n\n\n\n\n","category":"method"},{"location":"#GeoEMTIPDemonstration.toindex-Tuple{AbstractString, Vector{<:AbstractString}}","page":"Home","title":"GeoEMTIPDemonstration.toindex","text":"toindex(str::AbstractString, uniqlabels::Vector{<:AbstractString}) returns the only index of uniqlabels occurring in str.\n\n\n\n\n\n","category":"method"},{"location":"#GeoEMTIPDemonstration.uniqsomething!-Tuple{Any, Any}","page":"Home","title":"GeoEMTIPDemonstration.uniqsomething!","text":"uniqcol = uniqsomething!(df, col) add new column \"col_ind\" as the integer indices for a vector of string uniqcol.\n\n\n\n\n\n","category":"method"}]
}
